
            <nav class="second_nav">
                <ul class="second_nav__items">
                    <li class="second_nav__item"><a href="/admin/school_list/{{school_id}}/{{teacher_id}}" class="second_nav__link">Отменить редактирование</a></li>
                </ul>
            </nav>
        </div>
    </header>
    
    <main>
        <div class="blue-line"></div>      
        <h1>Форма редактирования</h1>  
        <form action="/admin/teacher/edit_teacher" method="POST" class="add_form" name="add_teacher">

            <p class="prompt"><span class="star">* поля, обязательные для заполнения </span></p>
            <h2 class="add_form__heading">Личные данные</h2>
            <label>ФИО <span class="star">*</span>
            {{#each data}}
            <input type="text" autofocus value="{{surname}}" name="surname" required>
            <label class="message" for="surname">Фамилия содержит только буквы русского алфавита</label>

            <input type="text" value="{{firstname}}" name="firstname" required>
            <label class="message" for="firstname">Имя содержит только буквы русского алфавита</label>

            <input type="text" value="{{patronymic}}" name="patronymic">
            <label class="message" for="patronymic">Отчество содержит только буквы русского алфавита</label>

            <label>Дата рождения <span class="star">*</span>
            <input type="date"  value="{{../birthdayConverter}}" name="birthday"   >
            <label class="message" for="birthday">Формат даты рождения должен быть таким: 01.01.1990</label>

            <label>СНИЛС <span class="star">*</span></label>
            <input type="text"  value="{{snils}}" name="snils" required>
            <label class="message" for="snils">Введите только 12 цифр</label>
           
            <label>Пол <span class="star">*</span>
                <select name="gender_id"  required>
              
                {{#each ../gender}}
                <option {{selected id_gender ../gender_id}} value="{{id_gender}}">{{gender_title}}</option>
                {{/each}}
                </select>
            </label>
            <label class="message" for="gender">Выберите пол</label>


            <h2 class="add_form__heading">Образование</h2>

            <input type="text" value="{{specialty}}"  name="specialty">
            <label class="message" for="specialty"></label>

            <label>Уровень образования <span class="star">*</span>
                <select name="level_of_education_id"  required>    
                    {{#each ../edu}}
                     <option {{selected id_edu_level ../level_of_education_id}} value="{{id_edu_level}}">{{title_edu_level}}</option>
                    {{/each}}
                </select>
            </label>
            <label class="message" for="level_of_education">Выберите уровень образования</label>

            <input type="text" value="{{diploma}}" name="diploma">
            <label class="message" for="diploma">В поле должны быть введены только цифры</label>

            <h2 class="add_form__heading">Профессиональные данные</h2>

            <label>Должность <span class="star">*</span>
                <select name="position"  required>
                    {{#each ../position}}
                    <option  {{selected id_position ../position}} value="{{id_position}}">{{title_position}}</option>
                    {{/each}} 
                </select>
            </label>
            <label class="message" for="position">Выберите должность</label>
            
            {{!-- <label>Преподаваемые дисциплины
                <select name="disciplines" form="add_teacher">
                    <option value="" selected>-</option>
                    
                    <option  value="{{id_discipline}}">{{title_discipline}}</option>
                   
                </select>
                <ul class="selected_disciplines">
                </ul>
            </label> --}}
            <label class="message" for="disciplines">message</label>

            <input type="text" value="{{total_experience}}" name="total_experience">
            <label class="message" for="total_experience">message</label>

            <input type="text" value="{{teaching_experience}}" name="teaching_experience">
            <label class="message" for="teaching_experience">message</label>
            
            <label>Категория
                <select name="category" >
                    <option value="" selected>-</option>
                   {{#each ../category}}
                    <option {{selected id_category ../category_id}} value="{{id_category}}">{{title_category}}</option>
                   {{/each}}
                </select>
            </label>
            <label class="message" for="category">message</label>


            <h2 class="add_form__heading">Контактные данные</h2>

            <input type="text" value="{{phone}}" name="phone">
            <label class="message" for="phone">Введите номер телефона в формате <br>+7 (000) 000 00 00</label>

            <input type="email" value="{{email}}" name="email">
            <label class="message" for="email">Адрес почты должен быть верного формата: example@mail.ru</label>
            
            <input type="hidden" name="id_teacher" value="{{id_teacher}}">
            <input type="hidden" name="school_id" value="{{ ../school_id }}">
            <input type="hidden" name="_csrf" value="{{@root.csrf}}" id="token">
            <button type="submit" class="add_form__button button">Обновить </button>
            {{/each}}
        </form>
       
    </main>

    {{!-- <script type="text/javascript" src="/js/script.js"></script>
    <script type="text/javascript" src="/js/mask.js"></script> --}}
    <script type="text/javascript">
        let years = document.querySelectorAll("select[name='year'] > option");
        function setYears(){
            let year = new Date().getFullYear();

            for(let i = 1; i < 6; i++){
                years[i].innerHTML = year - i+1;
            }
        }
        setYears();


        const patterns = { 
            surname: /^[а-яёА-ЯЁ]{1,}$/u,
            firstname: /^[а-яёА-ЯЁ]{1,}$/u,
            patronymic: /^[а-яёА-ЯЁ]+$/u,
            birthday: /^((?:19|20)\d{2})-(1[012]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$/,
            snils: /^\d{11}$/,

           /*  specialty: /^[а-яёА-ЯЁa-zA-Z]+$/u, */
            diploma: /^\d{6,}$/,

            /* total_experience: /^\d{1,2}$/,
            teaching_experience: /^\d{1,2}$/, */

            phone: /^\+7 \(\d{3}\) \d{3} \d{2} \d{2}$/,
            email: /^([a-z\d\.-]+)@([a-z\d-]+)\.([a-z]{2,8})(\.[a-z]{2,8})?$/
        }


        let inputs = document.querySelectorAll('input');
        let isValid = false;

        inputs.forEach((input) => {
            input.addEventListener('keyup', e => {
                validate(e.target, patterns[e.target.attributes.name.value]);
            })
        });

        let requiredFields = document.querySelectorAll('[required]');
        requiredFields.forEach(field => {
            let fieldName = field.attributes.name.value;
            let label = document.querySelector(`label[for='${fieldName}']`);
            const labelValue = label.innerHTML; 

            field.addEventListener('keyup', (e) => {
                if(!e.target.value || e.target.value === null || e.target.value === undefined){
                    label.innerHTML = 'Поле обязательно для заполнения';
                }
                else{
                    label.innerHTML = labelValue;
                }
            })
        });

        function validate(field, regex){
            if(regex.test(field.value) || 
              (!field.attributes.required && 
              (!field.value || field.value === null || field.value === undefined))){
                field.className = 'valid';
                isValid = true;
            }else{
                field.className = 'invalid';
                isValid = false;
            }
        };


        let validSelections = 0;
        function validateSelections(){
            let selects = document.querySelectorAll('select[required]');
            selects.forEach(select => {
                select.addEventListener('change', () => {
                    if(select.value){
                        validSelections++;
                    }else
                        validSelections--;
                })
            });
        };

        validateSelections();

        let disciplines = document.querySelector("select[name='disciplines']");
        let  selectedDisciplinesList = document.querySelector('.selected_disciplines');
        disciplines.addEventListener('change', event => {
            let value = event.target.value;
            let exist = false;
            let li;
            let selectedDisciplines = document.querySelectorAll('.selected_disciplines li');

            for(let i = 0; i < selectedDisciplines.length; i++){
                if(selectedDisciplines[i].innerText.slice(0, selectedDisciplines[0].innerText.length-1) === value){
                    exist = true;
                }
            }

            if(!exist){
                li = document.createElement('li');
                li.className = 'discipline';
                li.innerHTML = value;

                let span = document.createElement('span');
                span.className = 'cross';
                span.innerHTML = 'x';
                span.addEventListener('click', event => {
                    event.target.closest('li').remove();
                    if(!selectedDisciplines.length){
                        disciplines.value = '';
                    }
                })

                li.append(span);
                selectedDisciplinesList.append(li);
            }
        });


        let form = document.querySelector('.add_form');
        form.addEventListener('submit', event => {
            validateSelections()
            if(!isValid || validSelections < 3) { 
                let activeElement = document.activeElement;
                activeElement.scrollIntoView({behavior: 'smooth', block: 'center'});

                event.preventDefault();
                return false;
            }
        });

        let addQButton = document.querySelector('.add_qualification__button');
        
        addQButton.addEventListener('click', () =>{
            let qSection = document.querySelector('.qualification_section');
            let qBlock = document.querySelector('.qualification_section__block').cloneNode(true);
            qBlock.classList.add('qualification_section__block--new')
            qSection.appendChild(qBlock);

            let cross = qBlock.firstElementChild;
            cross.addEventListener('click', event => {
                event.target.parentElement.remove();
            });
        });


        let dateInput = document.querySelector("input[type='date']");

        let isMouseDown = false; // в примере будет работать только для 1ой кнопки
        dateInput.addEventListener('click', () => {
            isMouseDown = true
            console.log('hi');
            if(!isMouseDown){
            dateInput.blur();
            }
        })
    </script>
